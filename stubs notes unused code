current commit notepad:

'getting new comment to be associated with funding_project on creation'


To Do:

[  ] add users names to comments on funding projects
[  ] make comments section for projects and nest comments on project show page with form for new comments
[  ] Make a class scope method for all funding_projects that have met 80% funding
[  ] Finish Facebook signup
[  ] refactor for Model.find
[  ] fields should be enclosed within a fields_with_errors class and error messages describing the validation failures must be present within the view
[  ] Make sure all validations work
[  ] Add JS snippet to prevent backsies
[  ] Make admin privleges; only admin can delete a project
[  ] Refactor to include navbar: Log In, Home, Your Profile

Finished To Do

[ X ] Make sure login works
[ x ] Make a nested resource for a user address 


Unused Code:

  <h3>Make a Comment About This Project!</h4>
<%= form_for :comment, action: :new, url: 'new_comment_path' do |f| %>
<%= f.label :title %>
<%= f.text_field :title %><br>
<%= f.label "What do you think?" %>
<%= f.text_area :content %><br>
<%= f.submit "Submit"%>
<% end %>

# get 'addresses/index'
  # get 'addresses/new'
  # get 'addresses/create'
  # get 'addresses/show'
  # get 'addresses/edit'
  # get 'addresses/update'
  # get 'addresses/destroy'

  # resources :funding_projects do 
  #   resources :comments
  # end

  #can only destroy a funding project as admin

  # get 'pledges/new'
  # get 'pledges/create'
  # get 'pledges/show'
  # get 'pledges/edit'
  # get 'pledges/update'
  # get 'pledges/destroy'
  # get 'funding_projects/index'
  # get 'funding_projects/new'
  # get 'funding_projects/create'
  # get 'funding_projects/show'
  # get 'funding_projects/edit'
  # get 'funding_projects/update'
  # get 'funding_projects/destroy'
  # get 'users/index'
  # get 'users/new'
  # get 'users/create'
  # get 'users/show'
  # get 'users/edit'
  # get 'users/update'
  # get 'users/destroy'


[  ] Nest users funding projects under user to make it a separate url ... show
[  ] Add custom writer for user to show which pledges are subject to be withdrawn by funding_project creator, when funding goal is 90% met (money isn't withdrawn until funding goal is met)
               # oauth_email = request.env["omniauth.auth"][:info][:email]
            #     session[:user_id] = user.id
            #     redirect_to root_path
            # else 
            #     user = User.new(:email => oauth_email, :password = SecureRandom.hex)
            # if user.save
            #     session[:user_id] = user.id
            # else
            #     raise user.errors.full_messages.inspect

         # new_user_pledge = User.where(:id == @pledge.user_id)
    # @pledge.user_id = new_user_pledge    

    
    
    # @pledge = Pledge.where(:funding_project_id == @funding_project.id)
    # pledge = Pledge.create(params[:amount])
    # @funding_project.pledges < pledge

   # def create
#   @user = User.find_or_create_by(uid: auth['uid']) do |u|
#     u.name = auth['info']['name']
#     u.email = auth['info']['email']
#     u.image = auth['info']['image']
#   end

#   session[:user_id] = @user.id

#   render 'welcome/home'
# end

# private

# def auth
#   request.env['omniauth.auth']
# end

# <% if session[:user_id] %>
#   <h1><%= @user.name %></h1>
#   <h2>Email: <%= @user.email %></h2>
#   <h2>Facebook UID: <%= @user.uid %></h2>
#   <img src="<%= @user.image %>">
# <% else %>
#   <%= link_to('Log in with Facebook!', '/auth/facebook') %>
# <% end %>


    current_funding_project = FundingProject.where(@pledge.user_id == current_user)
binding.pry
    project_pledges = current_funding_project.pledges 

    new_pledge_save = @pledge 
    
    project_pledges << new_pledge_save 

    @pledge = new_pledge_save



<h2>Make a pledge for this project:</h2><br>
<%= form_for @funding_project do |f| %>
<h4>Pledge Amount (in U.S. dollars) <%= f.text_field :funding_project_pledge %></h4>
<%= f.submit "Make a Pledge"%>
<% end %>

<%# <p>Amount Pledged: <%= @funding_project.funding_goal %> </p><br> %>

<%# if @pledge.user_id == @funding_project.id %>
<%# make a form that lets you pledge right there
set @pledge form for
text_box for amount
makes use of @funding_project --- hidden param?
    or make it a collection nested hash
user_id assocation is easy, from sessions
direct to pledges#show %>

<%= form_for(@pledge) do |f| %> %>
<%# <%= @funding_project.id = @pledge.funding_project_id %> %>
<%= f.text_field :amount %>
<%= f.hidden :funding_project_id %>
<%= f.submit "Make a Pledge"%>
<% end %>



<%# <h2><%= link_to "Click here to make a pledge for this project (in U.S. dollars)", new_pledge_path %></h2><br> %>
<%# <%= form_for @funding_project do |f| %> %>
<%# <h4>Pledge Amount  <%= f.text_field :amount %></h4> %>
<%# <%= f.submit "Make a Pledge"%> %>
<%# <% end %> %>




<%# <%= link_to '/pledges/new', pledges_path%> %>
