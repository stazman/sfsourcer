current commit notepad:

'making links for convenience/later css navbar development'


To Do for Rails Project:

[ ] Make a new landing page for Sourcer Projects
[ ] Make funding_project category a nested attribute to choose when making a new funding_project
[ ] make total_pledges a true class scope method with #order
[ ] make sure Facebook signup works
[ ] For all relevant views: fields should be enclosed within a fields_with_errors class and error messages describing the validation failures must be present within the view
[ ] Make sure all validations work
[ ] Refactor pledge amount logic in funding_project#show


Future: 

[ ] Refactor to include navbar: Your Profile
[ ] add authentication for admin ... make admin controller in controllers/admin but figure out authentication Monban; https://roberteshleman.com/blog/2014/08/14/using-rails-namespaces-for-admin-actions/
[ ] make a new model :funding_project_creator: add columns for name, entries for social media connections, limited profile, choice to be same as user for login?
[ ] funding_project_creator can have different name, other profile info, but will be same :id and login for a user
[ ] Finish comments feature for projects
[ ] refactor for Model.find
[ ] Add JS snippet to prevent backsies
[ ] add feature: Which number of project it is for a user is :experience attribute to be a feature mostly connected to funding_project model
[ ] add last time logged in for project creators
[ ] Make a class scope method for all funding_projects that have met 80% funding
[ ] Make a custom route for countdown_projects
[ ] Change name into first name middle name last name entries ... nest them perhaps
[ ] Make form validations for user: must have first and last name, email must match best regex I can find, password must have at least one capital letter, 1 number, and 1 symbol and be 8 characters login
[ ] Change address into two nested addresses such as in lesson, check for business or personal, add country
[ ] Make form validations for addresses: address 1, city, state, country, zip must be present; zip must be five integers or five plus hyphen plus four integers
[ ] field drop down for USA or all countries if feasible
[ ] Funding_project validation for description must be at least 400 char long, funding_goal must be integer
[ ] code to remove minus symbol when funds still needed
[ ] Make form validations for pledges, must be integer
[ ] Comments validation no more than 400 characters
[ ] add users names to comments on funding projects
[ ] Add custom writer for user to show which pledges are subject to be withdrawn by funding_project creator, when funding goal is 90% met (money isn't withdrawn until funding goal is met)


class AdminController < ApplicationController
  before_action :require_admin

  def require_admin
    unless current_user.admin?
      redirect_to root_path
    end
  end
end
Now, each namespaced admin controller can inherit directly (and quite appropriately) from AdminController. Since weâ€™ve defined the before_action in AdminController, actions in any sub-classed controller will be restricted to admin users by default.

We no longer need to list the before_action or define a require_admin method in each of our namespaced controllers; they just inherit from AdminController:

class Admin::CategoriesController < AdminController
  # Methods omitted
end




Finished To Do

[x] Add categories model for funding_projects: 
[ X ] Make sure login works
[ x ] Make a nested resource for a user address 
[x] Make admin privleges; only admin can delete a project
[x] Make admin privileges; only admin can change/add/delete funding_project_categories


Unused Code:

<!DOCTYPE html>
<html>
  <head>
    <title>RailsAmusementPark</title>
    <%= csrf_meta_tags %>

    <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track': 'reload' %>
    <%= javascript_include_tag 'application', 'data-turbolinks-track': 'reload' %>
  </head>
  <body>
    <div class="navbar navbar-inverse navbar-fixed-top" role="navigation">
      <div class="container">
        <div class="navbar-header">
          <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
        <a class="navbar-brand" href="<%= root_url %>"/>Home</a>
        </div>
        <div class="navbar-collapse collapse">
          <ul class="nav navbar-nav">
            <% if current_user %>
              <li><%= link_to "Hello, #{current_user.name}!", user_path(current_user) %></li>
              <li><%= link_to "Attractions", attractions_path %></li>
              <li><%= link_to "Log Out", signout_path, method: :delete %></li>
            <% else %>
              <li><%= link_to "Sign Up", new_user_path %></li>
              <li><%= link_to "Sign In", signin_path %></li>
            <% end %>
          </ul>
        </div><!--/.nav-collapse -->
      </div>
    </div>

    <!-- content -->
    <div class="container"  role="main">
      <%= yield %>
    </div>
  </body>
</html>

  <h3>Make a Comment About This Project!</h4>
<%= form_for :comment, action: :new, url: 'new_comment_path' do |f| %>
<%= f.label :title %>
<%= f.text_field :title %><br>
<%= f.label "What do you think?" %>
<%= f.text_area :content %><br>
<%= f.submit "Submit"%>
<% end %>

# get 'addresses/index'
  # get 'addresses/new'
  # get 'addresses/create'
  # get 'addresses/show'
  # get 'addresses/edit'
  # get 'addresses/update'
  # get 'addresses/destroy'

  # resources :funding_projects do 
  #   resources :comments
  # end

  #can only destroy a funding project as admin

  # get 'pledges/new'
  # get 'pledges/create'
  # get 'pledges/show'
  # get 'pledges/edit'
  # get 'pledges/update'
  # get 'pledges/destroy'
  # get 'funding_projects/index'
  # get 'funding_projects/new'
  # get 'funding_projects/create'
  # get 'funding_projects/show'
  # get 'funding_projects/edit'
  # get 'funding_projects/update'
  # get 'funding_projects/destroy'
  # get 'users/index'
  # get 'users/new'
  # get 'users/create'
  # get 'users/show'
  # get 'users/edit'
  # get 'users/update'
  # get 'users/destroy'


               # oauth_email = request.env["omniauth.auth"][:info][:email]
            #     session[:user_id] = user.id
            #     redirect_to root_path
            # else 
            #     user = User.new(:email => oauth_email, :password = SecureRandom.hex)
            # if user.save
            #     session[:user_id] = user.id
            # else
            #     raise user.errors.full_messages.inspect

         # new_user_pledge = User.where(:id == @pledge.user_id)
    # @pledge.user_id = new_user_pledge    

    
    
    # @pledge = Pledge.where(:funding_project_id == @funding_project.id)
    # pledge = Pledge.create(params[:amount])
    # @funding_project.pledges < pledge

   # def create
#   @user = User.find_or_create_by(uid: auth['uid']) do |u|
#     u.name = auth['info']['name']
#     u.email = auth['info']['email']
#     u.image = auth['info']['image']
#   end

#   session[:user_id] = @user.id

#   render 'welcome/home'
# end

# private

# def auth
#   request.env['omniauth.auth']
# end

# <% if session[:user_id] %>
#   <h1><%= @user.name %></h1>
#   <h2>Email: <%= @user.email %></h2>
#   <h2>Facebook UID: <%= @user.uid %></h2>
#   <img src="<%= @user.image %>">
# <% else %>
#   <%= link_to('Log in with Facebook!', '/auth/facebook') %>
# <% end %>


    current_funding_project = FundingProject.where(@pledge.user_id == current_user)
binding.pry
    project_pledges = current_funding_project.pledges 

    new_pledge_save = @pledge 
    
    project_pledges << new_pledge_save 

    @pledge = new_pledge_save



<h2>Make a pledge for this project:</h2><br>
<%= form_for @funding_project do |f| %>
<h4>Pledge Amount (in U.S. dollars) <%= f.text_field :funding_project_pledge %></h4>
<%= f.submit "Make a Pledge"%>
<% end %>

<%# <p>Amount Pledged: <%= @funding_project.funding_goal %> </p><br> %>

<%# if @pledge.user_id == @funding_project.id %>
<%# make a form that lets you pledge right there
set @pledge form for
text_box for amount
makes use of @funding_project --- hidden param?
    or make it a collection nested hash
user_id assocation is easy, from sessions
direct to pledges#show %>

<%= form_for(@pledge) do |f| %> %>
<%# <%= @funding_project.id = @pledge.funding_project_id %> %>
<%= f.text_field :amount %>
<%= f.hidden :funding_project_id %>
<%= f.submit "Make a Pledge"%>
<% end %>



<%# <h2><%= link_to "Click here to make a pledge for this project (in U.S. dollars)", new_pledge_path %></h2><br> %>
<%# <%= form_for @funding_project do |f| %> %>
<%# <h4>Pledge Amount  <%= f.text_field :amount %></h4> %>
<%# <%= f.submit "Make a Pledge"%> %>
<%# <% end %> %>




<%# <%= link_to '/pledges/new', pledges_path%> %>


